(()=>{var __webpack_modules__={138:()=>{eval("let account\n\nconst initializeMina = async () => {\n  const onboardButton = document.getElementById('connectButton')\n  const getAccountsButton = document.getElementById('getAccounts')\n  const getAccountsResults = document.getElementById('getAccountsResult')\n\n  onboardButton.onclick = () => {\n    if (!window.mina) {\n      alert(\"请先安装auro-extension-wallet\")\n    } else {\n      onboardButton.innerText = 'Onboarding in progress'\n      window.mina.requestAccounts().then((data) => {\n        let approveAccount = data.result\n        console.log('requestAccounts=', approveAccount)\n        if (Array.isArray(approveAccount) && approveAccount.length > 0) {\n          account = approveAccount\n          document.getElementById('accounts').innerHTML = approveAccount;\n          onboardButton.innerText = 'Connected'\n          onboardButton.disabled = true\n        } else {\n          onboardButton.innerText = approveAccount.error\n        }\n      })\n        ;\n    }\n  }\n  /**\n   * get account\n   */\n  getAccountsButton.onclick = async () => {\n    if (window.mina) {\n      let approveAccount = await window.mina.requestAccounts();\n      account = approveAccount.result\n      if (Array.isArray(account) && account.length > 0) {\n        getAccountsResults.innerHTML = account || 'Not able to get accounts'\n      }\n    }\n  }\n\n\n  const sendButton = document.getElementById('sendButton')\n  const sendAmountInput = document.getElementById('sendAmountInput')\n  const receiveAddressInput = document.getElementById('receiveAddressInput')\n  const sendResultDisplay = document.getElementById('sendResultDisplay')\n\n  /**\n   * transfer \n   */\n  sendButton.onclick = async () => {\n    let from = account && account.length > 0 ? account[0] : \"\"\n    let signResult = await window.mina.signTransfer({\n      amount: sendAmountInput.value,\n      from: from,\n      to: receiveAddressInput.value,\n    })\n    console.log('signResult--0', signResult)\n    sendResultDisplay.innerHTML = signResult.error || signResult.result.hash\n  }\n\n\n  /**\n   * staking\n   */\n  const stakingButton = document.getElementById('stakingButton')\n  const vaildatorAddressInput = document.getElementById('vaildatorAddressInput')\n  const stakingResultDisplay = document.getElementById('stakingResultDisplay')\n\n  stakingButton.onclick = async () => {//质押不用输入金额\n    let from = account && account.length > 0 ? account[0] : \"\"\n    let signResult = await window.mina.signStaking({\n      from: from,\n      to: vaildatorAddressInput.value,\n    })\n    console.log('signVerifyButton--0', signResult)\n    stakingResultDisplay.innerHTML = signResult.error || signResult.result.hash\n  }\n\n  /**\n   * sign message\n   */\n  const signMessageButton = document.getElementById('signMessageButton')\n  const signMessageContent = document.getElementById('signMessageContent')\n  const signMessageResult = document.getElementById('signMessageResult')\n  const signVerifyButton = document.getElementById('signVerifyButton')\n  const verifyResult = document.getElementById('verifyResult')\n\n\n  let signResult\n\n  signMessageButton.onclick = async () => {\n    let from = account && account.length > 0 ? account[0] : \"\"\n    signResult = await window.mina.signMessage({\n      from: from,\n      message: signMessageContent.value,\n    })\n    console.log('signMessageButton--0', signResult)\n    signMessageResult.innerHTML = signResult.error || signResult.result.signature\n  }\n\n  /**\n   * Verify Message\n   */\n  signVerifyButton.onclick = async () => {\n    let messageVerifyResult = await window.mina.verifyMessage({\n      message: signResult?.result?.signature,\n    })\n    console.log('signVerifyButton--0', messageVerifyResult)\n    verifyResult.innerHTML = messageVerifyResult?.error || messageVerifyResult.result\n  }\n\n\n  setTimeout(() => {\n    if (window.mina) {\n      window.mina.onAccountChange('accountsChanged', handleNewAccounts);\n    }\n  }, 200);\n\n  function handleNewAccounts(newAccounts) {\n    if (Array.isArray(newAccounts)) {\n      document.getElementById('accounts').innerHTML = newAccounts;\n      if (newAccounts.length === 0) {\n        onboardButton.innerText = 'Connect'\n        onboardButton.disabled = false\n      }\n    }\n  }\n}\nwindow.addEventListener('DOMContentLoaded', initializeMina)//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wbGF5Z3JvdW5kLy4vc3JjL2luZGV4LmpzP2I2MzUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHVDQUF1QztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTM4LmpzIiwic291cmNlc0NvbnRlbnQiOlsibGV0IGFjY291bnRcblxuY29uc3QgaW5pdGlhbGl6ZU1pbmEgPSBhc3luYyAoKSA9PiB7XG4gIGNvbnN0IG9uYm9hcmRCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29ubmVjdEJ1dHRvbicpXG4gIGNvbnN0IGdldEFjY291bnRzQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2dldEFjY291bnRzJylcbiAgY29uc3QgZ2V0QWNjb3VudHNSZXN1bHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2dldEFjY291bnRzUmVzdWx0JylcblxuICBvbmJvYXJkQnV0dG9uLm9uY2xpY2sgPSAoKSA9PiB7XG4gICAgaWYgKCF3aW5kb3cubWluYSkge1xuICAgICAgYWxlcnQoXCLor7flhYjlronoo4VhdXJvLWV4dGVuc2lvbi13YWxsZXRcIilcbiAgICB9IGVsc2Uge1xuICAgICAgb25ib2FyZEJ1dHRvbi5pbm5lclRleHQgPSAnT25ib2FyZGluZyBpbiBwcm9ncmVzcydcbiAgICAgIHdpbmRvdy5taW5hLnJlcXVlc3RBY2NvdW50cygpLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgICAgbGV0IGFwcHJvdmVBY2NvdW50ID0gZGF0YS5yZXN1bHRcbiAgICAgICAgY29uc29sZS5sb2coJ3JlcXVlc3RBY2NvdW50cz0nLCBhcHByb3ZlQWNjb3VudClcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoYXBwcm92ZUFjY291bnQpICYmIGFwcHJvdmVBY2NvdW50Lmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBhY2NvdW50ID0gYXBwcm92ZUFjY291bnRcbiAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYWNjb3VudHMnKS5pbm5lckhUTUwgPSBhcHByb3ZlQWNjb3VudDtcbiAgICAgICAgICBvbmJvYXJkQnV0dG9uLmlubmVyVGV4dCA9ICdDb25uZWN0ZWQnXG4gICAgICAgICAgb25ib2FyZEJ1dHRvbi5kaXNhYmxlZCA9IHRydWVcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvbmJvYXJkQnV0dG9uLmlubmVyVGV4dCA9IGFwcHJvdmVBY2NvdW50LmVycm9yXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICAgIDtcbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIGdldCBhY2NvdW50XG4gICAqL1xuICBnZXRBY2NvdW50c0J1dHRvbi5vbmNsaWNrID0gYXN5bmMgKCkgPT4ge1xuICAgIGlmICh3aW5kb3cubWluYSkge1xuICAgICAgbGV0IGFwcHJvdmVBY2NvdW50ID0gYXdhaXQgd2luZG93Lm1pbmEucmVxdWVzdEFjY291bnRzKCk7XG4gICAgICBhY2NvdW50ID0gYXBwcm92ZUFjY291bnQucmVzdWx0XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShhY2NvdW50KSAmJiBhY2NvdW50Lmxlbmd0aCA+IDApIHtcbiAgICAgICAgZ2V0QWNjb3VudHNSZXN1bHRzLmlubmVySFRNTCA9IGFjY291bnQgfHwgJ05vdCBhYmxlIHRvIGdldCBhY2NvdW50cydcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuXG4gIGNvbnN0IHNlbmRCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2VuZEJ1dHRvbicpXG4gIGNvbnN0IHNlbmRBbW91bnRJbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzZW5kQW1vdW50SW5wdXQnKVxuICBjb25zdCByZWNlaXZlQWRkcmVzc0lucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JlY2VpdmVBZGRyZXNzSW5wdXQnKVxuICBjb25zdCBzZW5kUmVzdWx0RGlzcGxheSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzZW5kUmVzdWx0RGlzcGxheScpXG5cbiAgLyoqXG4gICAqIHRyYW5zZmVyIFxuICAgKi9cbiAgc2VuZEJ1dHRvbi5vbmNsaWNrID0gYXN5bmMgKCkgPT4ge1xuICAgIGxldCBmcm9tID0gYWNjb3VudCAmJiBhY2NvdW50Lmxlbmd0aCA+IDAgPyBhY2NvdW50WzBdIDogXCJcIlxuICAgIGxldCBzaWduUmVzdWx0ID0gYXdhaXQgd2luZG93Lm1pbmEuc2lnblRyYW5zZmVyKHtcbiAgICAgIGFtb3VudDogc2VuZEFtb3VudElucHV0LnZhbHVlLFxuICAgICAgZnJvbTogZnJvbSxcbiAgICAgIHRvOiByZWNlaXZlQWRkcmVzc0lucHV0LnZhbHVlLFxuICAgIH0pXG4gICAgY29uc29sZS5sb2coJ3NpZ25SZXN1bHQtLTAnLCBzaWduUmVzdWx0KVxuICAgIHNlbmRSZXN1bHREaXNwbGF5LmlubmVySFRNTCA9IHNpZ25SZXN1bHQuZXJyb3IgfHwgc2lnblJlc3VsdC5yZXN1bHQuaGFzaFxuICB9XG5cblxuICAvKipcbiAgICogc3Rha2luZ1xuICAgKi9cbiAgY29uc3Qgc3Rha2luZ0J1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdGFraW5nQnV0dG9uJylcbiAgY29uc3QgdmFpbGRhdG9yQWRkcmVzc0lucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3ZhaWxkYXRvckFkZHJlc3NJbnB1dCcpXG4gIGNvbnN0IHN0YWtpbmdSZXN1bHREaXNwbGF5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N0YWtpbmdSZXN1bHREaXNwbGF5JylcblxuICBzdGFraW5nQnV0dG9uLm9uY2xpY2sgPSBhc3luYyAoKSA9PiB7Ly/otKjmirzkuI3nlKjovpPlhaXph5Hpop1cbiAgICBsZXQgZnJvbSA9IGFjY291bnQgJiYgYWNjb3VudC5sZW5ndGggPiAwID8gYWNjb3VudFswXSA6IFwiXCJcbiAgICBsZXQgc2lnblJlc3VsdCA9IGF3YWl0IHdpbmRvdy5taW5hLnNpZ25TdGFraW5nKHtcbiAgICAgIGZyb206IGZyb20sXG4gICAgICB0bzogdmFpbGRhdG9yQWRkcmVzc0lucHV0LnZhbHVlLFxuICAgIH0pXG4gICAgY29uc29sZS5sb2coJ3NpZ25WZXJpZnlCdXR0b24tLTAnLCBzaWduUmVzdWx0KVxuICAgIHN0YWtpbmdSZXN1bHREaXNwbGF5LmlubmVySFRNTCA9IHNpZ25SZXN1bHQuZXJyb3IgfHwgc2lnblJlc3VsdC5yZXN1bHQuaGFzaFxuICB9XG5cbiAgLyoqXG4gICAqIHNpZ24gbWVzc2FnZVxuICAgKi9cbiAgY29uc3Qgc2lnbk1lc3NhZ2VCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2lnbk1lc3NhZ2VCdXR0b24nKVxuICBjb25zdCBzaWduTWVzc2FnZUNvbnRlbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2lnbk1lc3NhZ2VDb250ZW50JylcbiAgY29uc3Qgc2lnbk1lc3NhZ2VSZXN1bHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2lnbk1lc3NhZ2VSZXN1bHQnKVxuICBjb25zdCBzaWduVmVyaWZ5QnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NpZ25WZXJpZnlCdXR0b24nKVxuICBjb25zdCB2ZXJpZnlSZXN1bHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndmVyaWZ5UmVzdWx0JylcblxuXG4gIGxldCBzaWduUmVzdWx0XG5cbiAgc2lnbk1lc3NhZ2VCdXR0b24ub25jbGljayA9IGFzeW5jICgpID0+IHtcbiAgICBsZXQgZnJvbSA9IGFjY291bnQgJiYgYWNjb3VudC5sZW5ndGggPiAwID8gYWNjb3VudFswXSA6IFwiXCJcbiAgICBzaWduUmVzdWx0ID0gYXdhaXQgd2luZG93Lm1pbmEuc2lnbk1lc3NhZ2Uoe1xuICAgICAgZnJvbTogZnJvbSxcbiAgICAgIG1lc3NhZ2U6IHNpZ25NZXNzYWdlQ29udGVudC52YWx1ZSxcbiAgICB9KVxuICAgIGNvbnNvbGUubG9nKCdzaWduTWVzc2FnZUJ1dHRvbi0tMCcsIHNpZ25SZXN1bHQpXG4gICAgc2lnbk1lc3NhZ2VSZXN1bHQuaW5uZXJIVE1MID0gc2lnblJlc3VsdC5lcnJvciB8fCBzaWduUmVzdWx0LnJlc3VsdC5zaWduYXR1cmVcbiAgfVxuXG4gIC8qKlxuICAgKiBWZXJpZnkgTWVzc2FnZVxuICAgKi9cbiAgc2lnblZlcmlmeUJ1dHRvbi5vbmNsaWNrID0gYXN5bmMgKCkgPT4ge1xuICAgIGxldCBtZXNzYWdlVmVyaWZ5UmVzdWx0ID0gYXdhaXQgd2luZG93Lm1pbmEudmVyaWZ5TWVzc2FnZSh7XG4gICAgICBtZXNzYWdlOiBzaWduUmVzdWx0Py5yZXN1bHQ/LnNpZ25hdHVyZSxcbiAgICB9KVxuICAgIGNvbnNvbGUubG9nKCdzaWduVmVyaWZ5QnV0dG9uLS0wJywgbWVzc2FnZVZlcmlmeVJlc3VsdClcbiAgICB2ZXJpZnlSZXN1bHQuaW5uZXJIVE1MID0gbWVzc2FnZVZlcmlmeVJlc3VsdD8uZXJyb3IgfHwgbWVzc2FnZVZlcmlmeVJlc3VsdC5yZXN1bHRcbiAgfVxuXG5cbiAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgaWYgKHdpbmRvdy5taW5hKSB7XG4gICAgICB3aW5kb3cubWluYS5vbkFjY291bnRDaGFuZ2UoJ2FjY291bnRzQ2hhbmdlZCcsIGhhbmRsZU5ld0FjY291bnRzKTtcbiAgICB9XG4gIH0sIDIwMCk7XG5cbiAgZnVuY3Rpb24gaGFuZGxlTmV3QWNjb3VudHMobmV3QWNjb3VudHMpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShuZXdBY2NvdW50cykpIHtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdhY2NvdW50cycpLmlubmVySFRNTCA9IG5ld0FjY291bnRzO1xuICAgICAgaWYgKG5ld0FjY291bnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBvbmJvYXJkQnV0dG9uLmlubmVyVGV4dCA9ICdDb25uZWN0J1xuICAgICAgICBvbmJvYXJkQnV0dG9uLmRpc2FibGVkID0gZmFsc2VcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgaW5pdGlhbGl6ZU1pbmEpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///138\n")}},__webpack_exports__={};__webpack_modules__[138](),window.playground=__webpack_exports__.playground})();