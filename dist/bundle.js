(()=>{var __webpack_modules__={138:()=>{eval("let account\n\nconst initializeMina = async () => {\n  const onboardButton = document.getElementById('connectButton')\n  const getAccountsButton = document.getElementById('getAccounts')\n  const getAccountsResults = document.getElementById('getAccountsResult')\n\n  onboardButton.onclick = () => {\n    if (!window.mina) {\n      alert(\"请先安装mina-extension-wallet\")\n    } else {\n      onboardButton.innerText = 'Onboarding in progress'\n      window.mina.requestAccounts().then((approveAccount) => {\n        if (Array.isArray(approveAccount) && approveAccount.length > 0) {\n          account = approveAccount\n          document.getElementById('accounts').innerHTML = approveAccount;\n          onboardButton.innerText = 'Connected'\n          onboardButton.disabled = true\n        } else {\n          onboardButton.innerText = approveAccount.error\n        }\n      })\n        ;\n    }\n  }\n  /**\n   * get account\n   */\n  getAccountsButton.onclick = async () => {\n    if (window.mina) {\n      account = await window.mina.getAccounts();\n      if (Array.isArray(account) && account.length > 0) {\n        getAccountsResults.innerHTML = account || 'Not able to get accounts'\n      }\n    }\n  }\n\n\n  const sendButton = document.getElementById('sendButton')\n  const sendAmountInput = document.getElementById('sendAmountInput')\n  const receiveAddressInput = document.getElementById('receiveAddressInput')\n  const sendResultDisplay = document.getElementById('sendResultDisplay')\n\n  /**\n   * send transfer // 转账\n   */\n  sendButton.onclick = async () => {\n    let from = account && account.length > 0 ? account[0] : \"\"\n    let signResult = await window.mina.signTransaction({\n      amount: sendAmountInput.value,\n      from: from,\n      to: receiveAddressInput.value,\n    })\n    sendResultDisplay.innerHTML = signResult.error || signResult.hash\n  }\n\n\n  /**\n   * add escrow 质押\n   */\n  const stakingButton = document.getElementById('stakingButton')\n  const vaildatorAddressInput = document.getElementById('vaildatorAddressInput')\n  const stakingResultDisplay = document.getElementById('stakingResultDisplay')\n\n  stakingButton.onclick = async () => {//质押不用输入金额\n    let from = account && account.length > 0 ? account[0] : \"\"\n    let signResult = await window.mina.stakingTransaction({\n      from: from,\n      to: vaildatorAddressInput.value,\n    })\n    stakingResultDisplay.innerHTML = signResult.error || signResult.hash\n  }\n\n  /**\n   * sign message\n   */\n  const signMessageButton = document.getElementById('signMessageButton')\n  const signMessageContent = document.getElementById('signMessageContent')\n  const signMessageResult = document.getElementById('signMessageResult')\n  const signVerifyButton = document.getElementById('signVerifyButton')\n  const verifyResult = document.getElementById('verifyResult')\n\n\n  let signResult\n\n  signMessageButton.onclick = async () => {\n    let from = account && account.length > 0 ? account[0] : \"\"\n    signResult = await window.mina.signMessage({\n      from: from,\n      message: signMessageContent.value,\n    })\n    signMessageResult.innerHTML = signResult.error || signResult.signature\n  }\n\n  /**\n   * Verify Message\n   */\n  signVerifyButton.onclick = async () => {\n    let messageVerifyResult = await window.mina.verifyMessage({\n      message: signResult.signature,\n    })\n    verifyResult.innerHTML = messageVerifyResult?.error?.message || messageVerifyResult\n  }\n\n\n\n  /**\n   * get account from extension\n   */\n  async function getAccount() {\n    if (window.mina) {\n      account = await window.mina.getAccounts()\n      if (Array.isArray(account) && account.length > 0) {\n        onboardButton.innerText = 'Connected'\n        onboardButton.disabled = true\n        document.getElementById('accounts').innerHTML = account[0] || \"\";\n      }\n    }\n  }\n  setTimeout(() => {\n    getAccount()\n    if (window.mina) {\n      window.mina.onAccountChange('accountsChanged', handleNewAccounts);\n    }\n  }, 200);\n\n  function handleNewAccounts(newAccounts) {\n    if (Array.isArray(newAccounts)) {\n      document.getElementById('accounts').innerHTML = newAccounts;\n      if (newAccounts.length === 0) {\n        onboardButton.innerText = 'Connect'\n        onboardButton.disabled = false\n      }\n    }\n  }\n}\nwindow.addEventListener('DOMContentLoaded', initializeMina)//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wbGF5Z3JvdW5kLy4vc3JjL2luZGV4LmpzP2I2MzUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTM4LmpzIiwic291cmNlc0NvbnRlbnQiOlsibGV0IGFjY291bnRcblxuY29uc3QgaW5pdGlhbGl6ZU1pbmEgPSBhc3luYyAoKSA9PiB7XG4gIGNvbnN0IG9uYm9hcmRCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29ubmVjdEJ1dHRvbicpXG4gIGNvbnN0IGdldEFjY291bnRzQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2dldEFjY291bnRzJylcbiAgY29uc3QgZ2V0QWNjb3VudHNSZXN1bHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2dldEFjY291bnRzUmVzdWx0JylcblxuICBvbmJvYXJkQnV0dG9uLm9uY2xpY2sgPSAoKSA9PiB7XG4gICAgaWYgKCF3aW5kb3cubWluYSkge1xuICAgICAgYWxlcnQoXCLor7flhYjlronoo4VtaW5hLWV4dGVuc2lvbi13YWxsZXRcIilcbiAgICB9IGVsc2Uge1xuICAgICAgb25ib2FyZEJ1dHRvbi5pbm5lclRleHQgPSAnT25ib2FyZGluZyBpbiBwcm9ncmVzcydcbiAgICAgIHdpbmRvdy5taW5hLnJlcXVlc3RBY2NvdW50cygpLnRoZW4oKGFwcHJvdmVBY2NvdW50KSA9PiB7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGFwcHJvdmVBY2NvdW50KSAmJiBhcHByb3ZlQWNjb3VudC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgYWNjb3VudCA9IGFwcHJvdmVBY2NvdW50XG4gICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FjY291bnRzJykuaW5uZXJIVE1MID0gYXBwcm92ZUFjY291bnQ7XG4gICAgICAgICAgb25ib2FyZEJ1dHRvbi5pbm5lclRleHQgPSAnQ29ubmVjdGVkJ1xuICAgICAgICAgIG9uYm9hcmRCdXR0b24uZGlzYWJsZWQgPSB0cnVlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgb25ib2FyZEJ1dHRvbi5pbm5lclRleHQgPSBhcHByb3ZlQWNjb3VudC5lcnJvclxuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgICA7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBnZXQgYWNjb3VudFxuICAgKi9cbiAgZ2V0QWNjb3VudHNCdXR0b24ub25jbGljayA9IGFzeW5jICgpID0+IHtcbiAgICBpZiAod2luZG93Lm1pbmEpIHtcbiAgICAgIGFjY291bnQgPSBhd2FpdCB3aW5kb3cubWluYS5nZXRBY2NvdW50cygpO1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoYWNjb3VudCkgJiYgYWNjb3VudC5sZW5ndGggPiAwKSB7XG4gICAgICAgIGdldEFjY291bnRzUmVzdWx0cy5pbm5lckhUTUwgPSBhY2NvdW50IHx8ICdOb3QgYWJsZSB0byBnZXQgYWNjb3VudHMnXG4gICAgICB9XG4gICAgfVxuICB9XG5cblxuICBjb25zdCBzZW5kQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NlbmRCdXR0b24nKVxuICBjb25zdCBzZW5kQW1vdW50SW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2VuZEFtb3VudElucHV0JylcbiAgY29uc3QgcmVjZWl2ZUFkZHJlc3NJbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZWNlaXZlQWRkcmVzc0lucHV0JylcbiAgY29uc3Qgc2VuZFJlc3VsdERpc3BsYXkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2VuZFJlc3VsdERpc3BsYXknKVxuXG4gIC8qKlxuICAgKiBzZW5kIHRyYW5zZmVyIC8vIOi9rOi0plxuICAgKi9cbiAgc2VuZEJ1dHRvbi5vbmNsaWNrID0gYXN5bmMgKCkgPT4ge1xuICAgIGxldCBmcm9tID0gYWNjb3VudCAmJiBhY2NvdW50Lmxlbmd0aCA+IDAgPyBhY2NvdW50WzBdIDogXCJcIlxuICAgIGxldCBzaWduUmVzdWx0ID0gYXdhaXQgd2luZG93Lm1pbmEuc2lnblRyYW5zYWN0aW9uKHtcbiAgICAgIGFtb3VudDogc2VuZEFtb3VudElucHV0LnZhbHVlLFxuICAgICAgZnJvbTogZnJvbSxcbiAgICAgIHRvOiByZWNlaXZlQWRkcmVzc0lucHV0LnZhbHVlLFxuICAgIH0pXG4gICAgc2VuZFJlc3VsdERpc3BsYXkuaW5uZXJIVE1MID0gc2lnblJlc3VsdC5lcnJvciB8fCBzaWduUmVzdWx0Lmhhc2hcbiAgfVxuXG5cbiAgLyoqXG4gICAqIGFkZCBlc2Nyb3cg6LSo5oq8XG4gICAqL1xuICBjb25zdCBzdGFraW5nQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N0YWtpbmdCdXR0b24nKVxuICBjb25zdCB2YWlsZGF0b3JBZGRyZXNzSW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndmFpbGRhdG9yQWRkcmVzc0lucHV0JylcbiAgY29uc3Qgc3Rha2luZ1Jlc3VsdERpc3BsYXkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3Rha2luZ1Jlc3VsdERpc3BsYXknKVxuXG4gIHN0YWtpbmdCdXR0b24ub25jbGljayA9IGFzeW5jICgpID0+IHsvL+i0qOaKvOS4jeeUqOi+k+WFpemHkeminVxuICAgIGxldCBmcm9tID0gYWNjb3VudCAmJiBhY2NvdW50Lmxlbmd0aCA+IDAgPyBhY2NvdW50WzBdIDogXCJcIlxuICAgIGxldCBzaWduUmVzdWx0ID0gYXdhaXQgd2luZG93Lm1pbmEuc3Rha2luZ1RyYW5zYWN0aW9uKHtcbiAgICAgIGZyb206IGZyb20sXG4gICAgICB0bzogdmFpbGRhdG9yQWRkcmVzc0lucHV0LnZhbHVlLFxuICAgIH0pXG4gICAgc3Rha2luZ1Jlc3VsdERpc3BsYXkuaW5uZXJIVE1MID0gc2lnblJlc3VsdC5lcnJvciB8fCBzaWduUmVzdWx0Lmhhc2hcbiAgfVxuXG4gIC8qKlxuICAgKiBzaWduIG1lc3NhZ2VcbiAgICovXG4gIGNvbnN0IHNpZ25NZXNzYWdlQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NpZ25NZXNzYWdlQnV0dG9uJylcbiAgY29uc3Qgc2lnbk1lc3NhZ2VDb250ZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NpZ25NZXNzYWdlQ29udGVudCcpXG4gIGNvbnN0IHNpZ25NZXNzYWdlUmVzdWx0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NpZ25NZXNzYWdlUmVzdWx0JylcbiAgY29uc3Qgc2lnblZlcmlmeUJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzaWduVmVyaWZ5QnV0dG9uJylcbiAgY29uc3QgdmVyaWZ5UmVzdWx0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3ZlcmlmeVJlc3VsdCcpXG5cblxuICBsZXQgc2lnblJlc3VsdFxuXG4gIHNpZ25NZXNzYWdlQnV0dG9uLm9uY2xpY2sgPSBhc3luYyAoKSA9PiB7XG4gICAgbGV0IGZyb20gPSBhY2NvdW50ICYmIGFjY291bnQubGVuZ3RoID4gMCA/IGFjY291bnRbMF0gOiBcIlwiXG4gICAgc2lnblJlc3VsdCA9IGF3YWl0IHdpbmRvdy5taW5hLnNpZ25NZXNzYWdlKHtcbiAgICAgIGZyb206IGZyb20sXG4gICAgICBtZXNzYWdlOiBzaWduTWVzc2FnZUNvbnRlbnQudmFsdWUsXG4gICAgfSlcbiAgICBzaWduTWVzc2FnZVJlc3VsdC5pbm5lckhUTUwgPSBzaWduUmVzdWx0LmVycm9yIHx8IHNpZ25SZXN1bHQuc2lnbmF0dXJlXG4gIH1cblxuICAvKipcbiAgICogVmVyaWZ5IE1lc3NhZ2VcbiAgICovXG4gIHNpZ25WZXJpZnlCdXR0b24ub25jbGljayA9IGFzeW5jICgpID0+IHtcbiAgICBsZXQgbWVzc2FnZVZlcmlmeVJlc3VsdCA9IGF3YWl0IHdpbmRvdy5taW5hLnZlcmlmeU1lc3NhZ2Uoe1xuICAgICAgbWVzc2FnZTogc2lnblJlc3VsdC5zaWduYXR1cmUsXG4gICAgfSlcbiAgICB2ZXJpZnlSZXN1bHQuaW5uZXJIVE1MID0gbWVzc2FnZVZlcmlmeVJlc3VsdD8uZXJyb3I/Lm1lc3NhZ2UgfHwgbWVzc2FnZVZlcmlmeVJlc3VsdFxuICB9XG5cblxuXG4gIC8qKlxuICAgKiBnZXQgYWNjb3VudCBmcm9tIGV4dGVuc2lvblxuICAgKi9cbiAgYXN5bmMgZnVuY3Rpb24gZ2V0QWNjb3VudCgpIHtcbiAgICBpZiAod2luZG93Lm1pbmEpIHtcbiAgICAgIGFjY291bnQgPSBhd2FpdCB3aW5kb3cubWluYS5nZXRBY2NvdW50cygpXG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShhY2NvdW50KSAmJiBhY2NvdW50Lmxlbmd0aCA+IDApIHtcbiAgICAgICAgb25ib2FyZEJ1dHRvbi5pbm5lclRleHQgPSAnQ29ubmVjdGVkJ1xuICAgICAgICBvbmJvYXJkQnV0dG9uLmRpc2FibGVkID0gdHJ1ZVxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYWNjb3VudHMnKS5pbm5lckhUTUwgPSBhY2NvdW50WzBdIHx8IFwiXCI7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgIGdldEFjY291bnQoKVxuICAgIGlmICh3aW5kb3cubWluYSkge1xuICAgICAgd2luZG93Lm1pbmEub25BY2NvdW50Q2hhbmdlKCdhY2NvdW50c0NoYW5nZWQnLCBoYW5kbGVOZXdBY2NvdW50cyk7XG4gICAgfVxuICB9LCAyMDApO1xuXG4gIGZ1bmN0aW9uIGhhbmRsZU5ld0FjY291bnRzKG5ld0FjY291bnRzKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkobmV3QWNjb3VudHMpKSB7XG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYWNjb3VudHMnKS5pbm5lckhUTUwgPSBuZXdBY2NvdW50cztcbiAgICAgIGlmIChuZXdBY2NvdW50cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgb25ib2FyZEJ1dHRvbi5pbm5lclRleHQgPSAnQ29ubmVjdCdcbiAgICAgICAgb25ib2FyZEJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlXG4gICAgICB9XG4gICAgfVxuICB9XG59XG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGluaXRpYWxpemVNaW5hKSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///138\n")}},__webpack_exports__={};__webpack_modules__[138](),window.playground=__webpack_exports__.playground})();